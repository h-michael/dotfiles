# Language Server Protocol (LSP) support for vim and neovim.
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
on_ft = [
  'rust',
  'ruby',
  'c',
  'cpp',
  'dart',
  'go',
  'lua',
  'javascript',
  'javascript.jsx',
  'purescript',
  'haskell',
  'ocaml',
  'python',
  'Dockerfile'
]
hook_post_update = 'UpdateRemotePlugins'
hook_source = 'source ~/.vim/rc/dein/plugins/lc.rc.vim'

[[plugins]]
repo = 'ncm2/float-preview.nvim'
depends = ['deoplete.nvim']
on_source = 'deoplete.nvim'
if = 'has("nvim")'
hook_add = '''
  let g:float_preview#docked = 0
'''

[[plugins]]
repo = 'w0rp/ale'
on_event = 'BufRead'
hook_add = 'source ~/.vim/rc/dein/plugins/ale.rc.vim'

# utility comamnds of dein.vim with rich completion.
[[plugins]]
repo = 'haya14busa/dein-command.vim'
on_cmd = 'Dein'

# Benchmarck
[[plugins]]
repo = 'tweekmonster/startuptime.vim'
on_cmd = 'StartupTime'

# The vim source for neocomplete/deoplete
[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

# Syntax source for neocomplete/deoplete
[[plugins]]
repo = 'Shougo/neco-syntax'
on_event = 'InsertEnter'

# can edit vinari
[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_source = 'let g:vinarise_enable_auto_detect = 1'

# A secure alternative to Vim modelines
[[plugins]]
repo = 'ciaranm/securemodelines'
on_event = 'BufRead'

# endwise.vim: wisely add "end" in ruby, endfunction/endif/more in vim script, etc
[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = ['ruby']

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TabbarToggle', 'TagbarOpen']
hook_add = '''
  nnoremap <silent> ;tb :TagbarToggle<CR>
'''

# simple memo plugin for Vim.
[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList', 'MemoGrep']
hook_add = '''
  map <Leader>mn  :MemoNew<CR>
  map <Leader>ml  :MemoList<CR>
  map <Leader>mg  :MemoGrep<CR>
'''
