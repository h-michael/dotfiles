hook_add = '''
  " Vim
  let g:vimsyntax_noerror = 1
  "let g:vim_indent_cont = 0

  " python.vim
  let python_highlight_all = 1

  " elm
  let g:elm_format_autosave = 1
  let g:elm_detailed_complete = 1

  " Rust
  let g:rustfmt_autosave = 0
  let g:rust_fold = 1

  " Markdown
  " http://mattn.kaoriya.net/software/vim/20140523124903.htm
  let g:markdown_fenced_languages = [
        \  'coffee',
        \  'css',
        \  'erb=eruby',
        \  'javascript',
        \  'js=javascript',
        \  'json=javascript',
        \  'ruby',
        \  'sass',
        \  'xml',
        \  'vim',
        \]
  " Update filetype.
  autocmd MyAutoCmd BufWritePost * nested
  \ if &l:filetype ==# '' || exists('b:ftdetect')
  \ |   unlet! b:ftdetect
  \ |   filetype detect
  \ | endif
  " Reload .vimrc automatically.
  autocmd MyAutoCmd BufWritePost .vimrc,vimrc,*.rc.vim,dein*.toml source $MYVIMRC | redraw

  " Auto reload VimScript.
  autocmd MyAutoCmd BufWritePost,FileWritePost *.vim nested
  \ if &l:autoread > 0 | source <afile> |
  \   echo 'source ' . bufname('%') |
  \ endif
'''

[ftplugin]

_ = '''
  " Disable automatically insert comment.
  setl formatoptions-=r
  setl formatoptions-=o
  setl formatoptions+=mMBl

  " Disable auto wrap.
  if &l:textwidth != 70 && &filetype !=# 'help'
    setlocal textwidth=0
  endif

  " Use FoldCCtext().
  if &filetype !=# 'help'
    setlocal foldtext=FoldCCtext()
  endif
  if !&l:modifiable
    setlocal nofoldenable
    setlocal foldcolumn=0
    setlocal colorcolumn=
  endif
'''

vim = '''
  if line('$') > 1000
    syntax sync minlines=200
  endif
  setlocal foldmethod=indent
  setlocal shiftwidth=2 softtabstop=2
  setlocal iskeyword+=:,#
'''

toml = 'syntax sync minlines=2000'

dart = '''
  let dart_html_in_string=v:vital_import_without_let
  let dart_style_guide = 2
  let dart_format_on_save = 1
'''

help = '''
  setlocal iskeyword+=:
  setlocal iskeyword+=#
  setlocal iskeyword+=-
'''

