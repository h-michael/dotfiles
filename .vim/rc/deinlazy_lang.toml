# Dark powered asynchronous completion framework for neovim/Vim8
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_source = ['LanguageClient-neovim']
on_event = ['InsertEnter']
hook_source = '''
  source ~/.vim/rc/plugins/deoplete.rc.vim
  call deoplete#enable()
'''
hook_post_update = 'UpdateRemotePlugins'

# Include completion framework for neocomplete/deoplete
[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_source = ['deoplete.nvim']

# Print documents in echo area.
[[plugins]]
repo = 'Shougo/echodoc.vim'
on_source = ['deoplete.nvim']
hook_add = 'let g:echodoc_enable_at_startup = 1'

# [[plugins]]
# repo = 'rust-lang/rust.vim'
# on_ft = ['rust']
# hook_source = '''
#   let g:rustfmt_autosave = 0
#   let g:rust_fold = 1
# '''

# [[plugins]]
# repo = 'dart-lang/dart-vim-plugin'
# on_ft = 'dart'
# hook_source = '''
#   let dart_html_in_string=v:vital_import_without_let
#   let dart_style_guide = 2
#   let dart_format_on_save = 1
# '''

[[plugins]]
repo = 'machakann/vim-vimhelplint'
on_ft = 'help'
[plugins.ftplugin]
help = '''
nnoremap <silent><buffer> ,r  :<C-u>VimhelpLint!<CR>
'''

# [[plugins]]
# repo = 'tbodt/deoplete-tabnine'
# depends = 'deoplete.nvim'
# build = './install.sh'

# [[plugins]]
# repo = 'racer-rust/vim-racer'
# on_ft = ['rust']
# hook_source = '''
#   let g:racer_cmd = expand('$HOME/.cargo/bin/racer')
#   let g:racer_experimental_completer = 1
#   au FileType rust nmap gd <Plug>(rust-def)
#   au FileType rust nmap gs <Plug>(rust-def-split)
#   au FileType rust nmap gx <Plug>(rust-def-vertical)
#   au FileType rust nmap <leader>gd <Plug>(rust-doc)
# '''

# [[plugins]]
# repo = 'pbogut/deoplete-elm'

# [[plugins]]
# repo = 'zchee/deoplete-docker'

