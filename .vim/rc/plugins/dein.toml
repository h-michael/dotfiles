# Dark powered Vim/Neovim plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'
hook_post_update = 'UpdateRemotePlugins'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

# A solid language pack for Vim.
[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
  " let g:polyglot_disabled = ['rust', 'ruby']
'''
# vim plugin for direnv support
[[plugins]]
repo = 'direnv/direnv.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'phanviet/vim-monokai-pro'
hook_post_update = 'Dein recache-runtimepath'
hook_add = '''
  au MyAutoCmd VimEnter * nested colorscheme monokai_pro
'''

# lean & mean status/tabline for vim that's light as air
[[plugins]]
repo = 'vim-airline/vim-airline'

# A collection of themes for vim-airline
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = 'source ~/.vim/rc/plugins/config/vim-airline.rc.vim'
depends = ['vim-airline']

# "which" and "exec" functions targeted at local node project bin, with "which" fallback
[[plugins]]
repo = 'jaawerth/nrun.vim'

# commentary.vim: comment stuff out
[[plugins]]
repo = 'tpope/vim-commentary'
hook_add = '''
  autocmd FileType ocaml setlocal commentstring=(*\ %s\ *)
'''

# Vim plugin, insert or delete brackets, parens, quotes in pair
[[plugins]]
repo = 'jiangmiao/auto-pairs'

# surround.vim: quoting/parenthesizing made simple
[[plugins]]
repo = 'tpope/vim-surround'
hook_add = '''
  nmap s <Plug>Ysurround
  nmap ss <Plug>Yssurround
  let g:surround_{char2nr('e')} = "begin \r end"
  let g:surround_{char2nr('d')} = "do \r end"
  let g:surround_{char2nr("-")} = ":\r"
'''

# Rest your pinkies.
[[plugins]]
repo = 'lambdalisue/pinkyless.vim'

# vim-jp/autofmt
[[plugins]]
repo = 'vim-jp/autofmt'

# Context filetype library for Vim script
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# Vim constext filetype
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

# repeat.vim: enable repeating supported plugin maps with "."
[[plugins]]
repo = 'tpope/vim-repeat'

# A Filetype plugin for csv files
[[plugins]]
repo = 'chrisbra/csv.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  " override ripgrep command for preview
  command! -bang -nargs=* Rg
    \ call fzf#vim#grep(
    \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
    \   <bang>0 ? fzf#vim#with_preview('up:60%')
    \           : fzf#vim#with_preview('right:50%:hidden', '?'),
    \   <bang>0)

  command! -bang -nargs=* CurrentWordRg
    \ call fzf#vim#grep(
    \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(expand('<cword>')), 1,
    \   <bang>0 ? fzf#vim#with_preview('up:60%')
    \           : fzf#vim#with_preview('right:50%:hidden', '?'),
    \   <bang>0)

  command! -bang -nargs=? -complete=dir CurrentBufferDir
    \ call fzf#vim#files(expand('%:p:h'), fzf#vim#with_preview(), <bang>0)

  command! -bang -nargs=? -complete=dir ProjectDir
    \ call fzf#vim#files(getcwd(), fzf#vim#with_preview(), <bang>0)

  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

  nnoremap <silent> /    :BLines <CR>
  nnoremap <silent> ;cw  :CurrentWordRg <CR>
  nnoremap <silent> ;cbd :CurrentBufferDir <CR>
  nnoremap <silent> ;pd  :ProjectDir <CR>
  nnoremap <silent> ;rg  :Rg <CR>
  nnoremap <silent> ;gr  :Rg <CR>
  nnoremap <silent> ;b   :Buffers <CR>
  nnoremap <silent> ;f   :Files <CR>
  nnoremap <silent> ;t   :Tags <CR>
'''

# fugitive.vim: A Git wrapper so awesome, it should be illegal
[[plugins]]
repo = 'tpope/vim-fugitive'

# rhubarb.vim: GitHub extension for fugitive.vim
[[plugins]]
repo = 'tpope/vim-rhubarb'
depends = ['vim-fugitive']

# Vim and Neovim plugin to reveal the commit messages under the cursor
[[plugins]]
repo = 'rhysd/git-messenger.vim'

# Translate-shell.vim is a plugin for translating text without leaving Vim.
[[plugins]]
repo = 'echuraev/translate-shell.vim'
build = 'wget -O ~/.vim/trans git.io/trans && chmod +x ~/.vim/trans'
hook_add = '''
  let g:trans_directions_list = [
      \['en', 'ja'],
      \['ja', 'en'],
      \['', 'ja'],
      \['', ''],
  \]
  let g:trans_close_window_after_saving = 1
  let g:trans_save_only_unique = 1
  let g:trans_save_raw_history = 1
  let g:trans_save_history = 3
  " let g:trans_save_audio = 1
  " let g:trans_history_format = '%s;%t;%as;%at'
  let g:trans_history_file = '~/.vim/trans_history/trans_history.csv'
  " let g:trans_history_format = '%s;%t'
  let g:trans_history_file = '~/trans_history/trans_history.csv'
  " let g:trans_bin = "/usr/bin/"
'''

[[plugins]]
repo = 'itchyny/vim-pdf'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'kana/vim-niceblock'

[[plugins]]
repo = 'mbbill/undotree'

[[plugins]]
repo = 'RRethy/vim-hexokinase'
build = 'make hexokinase'
hook_add = '''
  let g:Hexokinase_ftAutoload = ['scss', 'css', 'javascript', 'javascript.jsx', 'xml']
  let g:Hexokinase_refreshEvents = ['TextChanged', 'TextChangedI']
  let g:Hexokinase_virtualText = '██████'
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'

[[plugins]]
repo = 'haya14busa/vim-poweryank'
hook_source = '''
  map <Leader>y <Plug>(operator-poweryank-osc52)
'''

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'puremourning/vimspector'
on_if = '!has("nvim")'
hook_add = '''
  let g:vimspector_enable_mappings = 'VISUAL_STUDIO'
'''

# A comprehensive Vim utility functions for Vim plugins
[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'bfredl/nvim-luadev'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_source = '''
  source ~/.vim/rc/plugins/config/vim-lsp.rc.vim
'''
