#### ── Basic Options ────────────────────────────────────────────

# Dynamically choose terminfo (tmux-256color if available, otherwise screen-256color)
if-shell 'infocmp tmux-256color >/dev/null 2>&1' \
  'set -g default-terminal "tmux-256color"' \
  'set -g default-terminal "screen-256color"'

# Use the user’s shell for commands
set -g default-shell   "${SHELL}"
set -g default-command "${SHELL}"

# Speed up key sequence recognition and enable focus events
set -s escape-time 10
set -s focus-events on

# Assume UTF-8 support (for tmux < 2.2)
set -q -g status-utf8 on

# Number windows and panes starting at 1
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Monitor background-window activity without flashing the status bar
set -g monitor-activity on    # Notify on activity
set -g visual-activity off    # Don’t flash bar

# Increase scrollback and message display durations
set -g history-limit       10000   # 10 000 lines back
set -g display-panes-time    800   # Pane numbers for 0.8 s
set -g display-time         1000   # Messages for 1 s
set -sg repeat-time          300   # 300 ms

# Enable mouse and Vi-style keybinding in copy mode
set -g mouse on
set -g status-keys vi
set -g mode-keys vi

# Place status bar at top and refresh every second
set -g status-position top
set -g status-interval 1

# Automatic window title updates
set -g set-titles on
set -g set-titles-string '#H | #S | CW: #I | #W'


#### ── Appearance ─────────────────────────────────────────

source-file "$XDG_CONFIG_HOME/tmux/appearance.conf"

setw -g aggressive-resize on
setw -g automatic-rename  on   # Rename windows to current command
setw -g xterm-keys       on   # Support extended keys
setw -q -g utf8 on             # Force UTF-8 in panes


#### ── Prefix & Buffer Management ──────────────────────────────────

unbind C-a
unbind C-b

set -g prefix C-s
bind-key -T prefix C-s send-prefix

# Buffers under prefix
bind-key -T prefix b list-buffers
bind-key -T prefix p paste-buffer
bind-key -T prefix P choose-buffer

# Edit & reload config
bind-key -T prefix e new-window -n "$XDG_CONFIG_HOME/tmux/tmux.conf" "sh -c \"$EDITOR "$XDG_CONFIG_HOME/tmux/tmux.conf" && tmux source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" && tmux display 'Config reloaded'\""
bind-key -T prefix r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display 'Config reloaded'


#### ── Sessions, Windows & Panes ──────────────────────────────────

# Create & find sessions
bind-key -T prefix C-f command-prompt -p find-session 'switch-client -t %%'

# ‘new’ mode for sessions/windows/splits
bind-key -T prefix n switch-client -T new
bind -Tnew c switch-client -T current
bind -Tnew s command-prompt -I "new-session -s "
bind -Tnew w new-window
bind -Tnew - split-window -v
bind -Tnew | split-window -h

# Keep current path when splitting/creating
bind -Tcurrent s new-session -c "#{pane_current_path}"
bind -Tcurrent w new-window    -c "#{pane_current_path}"
bind -Tcurrent - split-window -v -c "#{pane_current_path}"
bind -Tcurrent | split-window -h -c "#{pane_current_path}"


#### ── Navigation & Resizing ───────────────────────────────────────

# Pane movement with hjkl
bind-key -T prefix -r h select-pane -L
bind-key -T prefix -r j select-pane -D
bind-key -T prefix -r k select-pane -U
bind-key -T prefix -r l select-pane -R

# Swap panes
bind-key -T prefix > swap-pane -D
bind-key -T prefix < swap-pane -U

# Resize panes with Shift+hjkl
bind-key -T prefix -r H resize-pane -L 10
bind-key -T prefix -r J resize-pane -D 10
bind-key -T prefix -r K resize-pane -U 10
bind-key -T prefix -r L resize-pane -R 10

# Window navigation
bind-key -T prefix -r C-h previous-window
bind-key -T prefix -r C-l next-window
bind-key -T prefix Tab last-window
bind-key -T prefix S-Left  swap-window -t -1
bind-key -T prefix S-Right swap-window -t +1


#### ── Copy Mode, OSC52 & Clipboard ─────────────────────────────────

# Enter copy mode
bind-key -T prefix Enter copy-mode


# Vi-style in copy mode
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection'
run -b 'tmux bind -T copy-mode-vi Y send -X copy-pipe-and-cancel "tmux save-buffer - | yank > #{pane_tty}"'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle'

# Global (no-prefix) paste bindings
bind-key -T root M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'
bind-key -T root M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'
# When scrolling with the mouse wheel, enter copy mode automatically
# if not already in it. This helps to preserve the scroll position.
bind-key -T root WheelUpPane if-shell -F -t = "#{pane_in_mode}" "send-keys -M" "copy-mode -e"

# Prefix+y for OSC52 yank
if -b 'command -v yank >/dev/null 2>&1' \
  'bind-key -T prefix y run -b "tmux save-buffer - | yank > #{pane_tty}"'

# Fallbacks: macOS, X11, Windows clip
if -b 'command -v reattach-to-user-namespace >/dev/null 2>&1' \
  'bind-key -T prefix y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
if -b 'command -v xsel >/dev/null 2>&1' \
  'bind-key -T prefix y run -b "tmux save-buffer - | xsel -i -b"'
if -b 'command -v xclip >/dev/null 2>&1' \
  'bind-key -T prefix y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null"'
if -b 'command -v clip.exe >/dev/null 2>&1' \
  'bind-key -T prefix y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' \
  'bind-key -T prefix y run -b "tmux save-buffer - > /dev/clipboard"'

#### ── Plugin Management (tpm) ───────────────────────────────────────

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Initialize TPM
run -b '~/.tmux/plugins/tpm/tpm'
