## -- set-options ------------------------------------------------------------

# colors!
set -g default-terminal "tmux-256color"

# faster command sequences
set -s escape-time 10
# set -s focus-events on

# expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on

# start windows numbering at 1
set -g base-index 1

# renumber windows when a window is closed
set -g renumber-windows on

# set terminal title
set -g set-titles on

# slightly longer pane indicators display time
set -g display-panes-time 800
# slightly longer status messages display time
set -g display-time 1000

# activity
set -g monitor-activity on
set -g visual-activity off
set -s escape-time 0

# increase history size
set -g history-limit 10000

# increase repeat timeout
set -sg repeat-time 300

# start with mouse mode enabled
set -g mouse on

# force Vi mode
# really you should export VISUAL or EDITOR environment variable, see manual
set -g status-keys vi
set -g mode-keys vi

# move status line to top
set -g status-position top

set -g set-titles-string '#H Session: #S  CW: #I #W'
set -g status-interva 1

set -g status-style bg="colour238",fg="colour255"
set -g status-left-length 50
set -g status-left "#[fg=colour255,bg=colour241]%Y/%m/%d %H:%M:%S|#H|Session:#S|#{prefix_highlight} "
set -g status-right "#[fg=colour255,bg=colour241] #{online_status} #{cpu_icon} #{cpu_percentage} #{battery_icon} #{battery_percentage}"

set -ga terminal-overrides ",alacritty:Tc"
# set -ga terminal-overrides ",xterm-termite:Tc"


## -- set-window-options -----------------------------------------------------
setw -g window-status-format "#I:#W "
setw -g window-status-current-format "#[fg=colour255,bg=colour171]#I: #W "

setw -g aggressive-resize on
# make pane numbering consistent with windows
setw -g pane-base-index 1
# rename window to reflect current program
setw -g automatic-rename on

setw -g xterm-keys on

# expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

## -- key binding ------------------------------------------------------------
### -- unbind default key bind -----------------------------------------------

# prefix
unbind C-a
unbind C-b

# window navigation
unbind n
unbind p

# Explicit `Enter` key fires copying the selection
unbind -T copy-mode-vi MouseDragEnd1Pane

### -- bind-key --------------------------------------------------------------

# prefix
set -g prefix C-s
bind C-s send-prefix

# buffers
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

#### -- navigation -----------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# create new session, window, and split-window
bind n switch-client -Tnew

bind -Tnew c switch-client -Tcurrent
bind -Tnew s command-prompt -I "new-session -s "
bind -Tnew w new-window
bind -Tnew - split-window -v
bind -Tnew | split-window -h

bind -Tcurrent s     new-session -c "#{pane_current_path}"     # create new session with current directory
bind -Tcurrent w     new-window -c "#{pane_current_path}"      # create new window with current directory
bind -Tcurrent -     split-window -v -c "#{pane_current_path}" # split current window vertically init with current directory
bind -Tcurrent |     split-window -h -c "#{pane_current_path}" # split current window horizontally init with current directory

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Window navigation
bind -r C-h  previous-window   # select previous window
bind -r C-l  next-window       # select next window
bind Tab     last-window       # move to last active window
bind S-Left  swap-window -t -1
bind S-Right swap-window -t +1

# # Switch clients
# bind H switch-client -p
# bind L switch-client -n


# Explicit `Enter` key fires copying the selection
# bind -T copy-mode-vi y send-keys -X copy-pipe 'tmux copy-buffer | tmux save-buffer - | yank > #{pane_tty} | tmux cancel'
# bind -T copy-mode y send-keys -X copy-pipe-and-cancel 'tmux copy-buffer | tmux save-buffer - | yank > #{pane_tty} | tmux cancel'
bind -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel 'tmux copy-buffer | tmux save-buffer - | yank > #{pane_tty} | tmux cancel'

# copy with OSC 52(this needs yank script)
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1 && command -v yank > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | yank > #{pane_tty}"'

# transfer copied text to attached terminal with yank
bind -T copy-mode-vi y send-keys -X copy-pipe 'yank > #{pane_tty}'

# transfer most-recently copied text to attached terminal with yank
bind -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# transfer previously copied text (chosen from a menu) to attached terminal
bind -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'

### -- copy mode --

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'

if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# -- plugins -----------------------------------------------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_show_copy_mode 'on'

run -b '~/.tmux/plugins/tpm/tpm'
